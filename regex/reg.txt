플래그
/규칙/ gim
1. g : 문단 나뉨과 상관없이 전체에서 일치한 문자열 찾기
2. i : 대소문자 구분없이 찾기
3. m : ^,$ 와 같이 사용해서 문단의 시작, 끝 일치하는 문자열 찾기


규칙
^ : ~~ 시작하는             => 이 두개는 multiline 과 같이 써야함
$ : ~~~ 끝나는              => 그래야 가장 처음 문단 뿐만 아닌 전체 문단에서 검색 가능
\ : 특수기호를 정규식 표현으로 쓸 때
. : 모든 문자열, 숫자, 공백, 특수문자를 의미함
[] : 각 문자별로 찾기 
[][] : 두 문자가 포함된 모든 것들
[A-Z] : 대문자 A~Z 찾기
[가-힣] : 한글 찾기
[^~~] : ~~를 제외하고 모두 찾기
() : ()안쪽 문자열을 포함한 요소 찾기(그룹화)  ==> Capturing
(문자열|문자열) : 문자열 or 문자열 찾기  => 괄호 밖에 문자열 등을 붙여서 중복되는 구문자체로 찾을 수 있음  
                ==>  Capturing : 패턴을 기억해놨다가 재사용(기본적으로 패턴은 패턴과 일치하는 문자열을 찾고 패턴 소멸)
(?:~~) : ~~을 캡쳐링 하지마라 (non-capturing)

수량 : +(1 ~ 무한대), *(0 ~ 무한대), ?(0 ~ 1)
a+ : a 가 1개 ~ 무한대까지 묶어서 찾아줌
a* : a 가 없는상태 ~ 무한대까지 묶어서 찾아줌
? ==> ma?t : m과 t사이에 a가 없거나 한개만 있을 때 찾아줌
{3} : 3번만큼 반복되는 경우 찾기
- 예 => {1,3} : 최소 1 ~ 최대 3
        {2,} : 최소 2 ~ 무한대

        ma{1,3}t : m과 t사이에 a가 1개 에서 3개까지 포함되어있는 문자열 찾기

source : <i>greedy</i> and <i>laze</i> matching

적극적(greedy) 일치 : <i>.*<\/i> => <i>greedy</i> and <i>laze</i>

소극적(lazy) 일치 : <i>.*?<\/i> => <i>greedy</i> 그리고 <i>laze</i> 따로 찾을 수 있음

[A-Za-z0-9_] == \w : 모든 문자 찾기
[A-Za-z0-9_] == \W : 모든 문자를 제외하고 찾기
[0-9] == \d : 모든 숫자 찾기
[0-9] == \D : 모든 숫자 제외하고 찾기
\s == 모든 공백 찾기
\S == 모든 공백 제외하고 찾기

Lookahead 개념 : 패턴을 찾을 때, 단어를 소비하지 않음

아이디가 대소문자, 숫자, 특수문자 _ 만 허용 (전체 자리수는 5 ~ 8자리)
비밀번호가 대소문자, 숫자, 특수문자 _ 만 허용 (전체 자리수는 5 ~ 12자리) : 순서는 상관없이
 => 예) AVwcd20923@$! 모두 들어가게 하고 싶음 
이메일 패턴 다양한문자숫자@naver.com

?=패턴 (전방탐색): 패턴을 조건으로 사용하되 표현하진 않음

/^(?=.*[A-Za-z])(?=.*[0-9])(?=.*[!@#$%])[A-Za-z0-9!@#$%]{5,12}$/
 => "순서는 상관없이 대소문자,숫자,특수문자가 모두 포함된 상태로 5~12자리로 만들어야한다"